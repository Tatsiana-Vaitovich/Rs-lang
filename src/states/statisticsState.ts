// для реализации статистики нужны данные. мне нужно их получать из функционала, который реализуют другие разработчики )

// так, для краткосрочной статистики используются данные:
// по словам: количество новых слов за день, количество изученных слов за день, %правильных ответов за день - это получу, зная количество вопросов, заданных в играх и количество правильных ответов.
// по играм: количество новых слов за день, %правильных ответов (получу, зная количество вопросов и количество правильных ответов), самая длинная серия правильных ответов

// реализация долгосрочной статистики - дополнительных функционал. здесь нужно хранить данные с датами, по дням. нужны: количество новых слов за каждый день, количество изученных слов за каждый день.

// после загрузки страницы (если пользователь залогинен) или после логина получаем с бэк statData (StatisticService, getStatistics()). если значение поля 'date' совпадает с текущей - 'дата с бэк' = statData. если дата на бэке не совпадает с текущей - берем "чистый объект" StatData, заполняем поле date.
// при получении результатов игр, добавлении слов в выученные (или удалении из выученных), добавлении слова в изученные - изменяем счетчик в соответсвующем поле.
// при закрытии приложения - отсылаем statData на сервер - используем StatisticService, upsertStatistics(). так???
// если мне нужно отразить статистику - я беру данные из statData.

export const statData: StatDataType = {
  learnedWords: 0,
  optional: {
    date: '',
    sprint: {
      newWords: 0,
      rightAnsw: 0,
      questions: 0,
      session: 0,
    },
    challenge: {
      newWords: 0,
      rightAnsw: 0,
      questions: 0,
      session: 0,
    },
    // longTerm: [],
  },
};

export type StatDataType = {
  learnedWords: number; // количество изученных слов за день
  optional: StatDataOptionalType;
};

export type StatDataOptionalType = {
  date: string; // число в формате дата-месяц-год
  sprint: StatDataGameType;
  challenge: StatDataGameType;
  // longTerm: [LongTermType] | []; // сюда записываем статистику по дням для реализации долгострочной статистики. тут дублируются
};

export type StatDataGameType = {
  newWords: number; // количество новых слов, использованных в игре за день
  rightAnsw: number; // количество правильных ответов за день
  questions: number; // количество отвеченных вопросов за день
  session: number; // самая длинная сессия (количество слов) за день
};

export type LongTermType = {
  date: string; // дата
  new: number; // количество новых слов за день
  learned: number; // количество изученных слов за день
};

// новые слова - слова, которые используются в играх первый раз
// изученные: 1) слова, на которые пользователь дал правильные ответы в играх (3 раза подряд - для обычных слов; 5 раз подряд - для сложных слов); 2) слова, которые пользователь пометил как изученные 3) слова, при угадывании которых была допущенна ошибка, удаляются из изученных.
// не придумала, как записать долгосрочную статистику (LongTermStat). т.е количество полей у optinal ограничено и количество знаков в каждом поле - тоже. только есть такая мысль: при переполнении optinal - удалять данные с самой поздней датой???

// это мои мысли. любые ваши идеи - приветствуются. пишите в личку или в общий чат. если нужно - создам отдельный канал для обсуждения этого вопроса. спасибо!
